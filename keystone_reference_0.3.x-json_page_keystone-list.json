---
permalink: keystone/reference/0.3.x-json/page/keystone-list.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.List Class",
  "slug": "keystone-list",
  "page": {
    "_id": "56d7d408dc8aef5a45e620ea",
    "sortBy": 1,
    "currentOrder": 31,
    "order": 31,
    "menuTitle": "Keystone.List",
    "slug": "keystone-list",
    "updatedBy": "56d3ec56c3bc4bb55f32eb6f",
    "updatedAt": "2016-03-03T06:06:46.422Z",
    "createdBy": "56d3ec56c3bc4bb55f32eb6f",
    "createdAt": "2016-03-03T06:04:56.401Z",
    "key": "keystonelist-class",
    "title": "Keystone.List Class",
    "parent": {
      "_id": "56ce85b72016dcfc71d320fd",
      "order": 2,
      "slug": "keystone",
      "title": "Keystone",
      "parent": "56d194a6020b01635cade433"
    },
    "publish": "published",
    "sortNumber": "31",
    "type": 1,
    "links": [],
    "display": 1,
    "externalLinks": "",
    "markdown": {
      "html": "<h4 id=\"new-keystone-list-key-options-\">new Keystone.List( key, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>key</strong> <em>{String}</em>  - List name<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - Object of valid options<br><em>@return</em> <strong>Instance</strong>   </p>\n</blockquote>\n<p>Create a new Keystone List.<br>Each list is a wrapper around a mongoose collection schema and includes Keystone specific enhancements.<br>The mongoose schema is available via <code>list.schema</code>.  </p>\n<p><div class=\"code-header\"> <h4>Create a new list</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">  </p>\n<pre><code>    <span class=\"hljs-built_in\">var</span> keystone = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'keystone'</span>);\n    <span class=\"hljs-built_in\">var</span> Types = keystone.Field.Types;\n\n    <span class=\"hljs-built_in\">var</span> Post = <span class=\"hljs-keyword\">new</span> keystone.List(<span class=\"hljs-string\">'Post'</span>, {\n        <span class=\"hljs-attribute\">autokey</span>: { <span class=\"hljs-attribute\">path</span>: <span class=\"hljs-string\">'slug'</span>, <span class=\"hljs-attribute\">from</span>: <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-attribute\">unique</span>: <span class=\"hljs-literal\">true</span> },\n        <span class=\"hljs-attribute\">map</span>: { <span class=\"hljs-attribute\">name</span>: <span class=\"hljs-string\">'title'</span> },\n        <span class=\"hljs-attribute\">defaultSort</span>: <span class=\"hljs-string\">'-createdAt'</span>\n    });\n\n    Post.add({\n        <span class=\"hljs-attribute\">title</span>: { <span class=\"hljs-attribute\">type</span>: <span class=\"hljs-built_in\">String</span>, <span class=\"hljs-attribute\">required</span>: <span class=\"hljs-literal\">true</span> },\n        <span class=\"hljs-attribute\">state</span>: { <span class=\"hljs-attribute\">type</span>: Types.Select, <span class=\"hljs-attribute\">options</span>: <span class=\"hljs-string\">'draft, published, archived'</span>, <span class=\"hljs-attribute\">default</span>: <span class=\"hljs-string\">'draft'</span> },\n        <span class=\"hljs-attribute\">author</span>: { <span class=\"hljs-attribute\">type</span>: Types.Relationship, <span class=\"hljs-attribute\">ref</span>: <span class=\"hljs-string\">'User'</span> },\n        <span class=\"hljs-attribute\">createdAt</span>: { <span class=\"hljs-attribute\">type</span>: <span class=\"hljs-built_in\">Date</span>, <span class=\"hljs-attribute\">default</span>: <span class=\"hljs-built_in\">Date</span>.now },\n        <span class=\"hljs-attribute\">publishedAt</span>: <span class=\"hljs-built_in\">Date</span>,\n        <span class=\"hljs-attribute\">image</span>: { <span class=\"hljs-attribute\">type</span>: Types.CloudinaryImage },\n        <span class=\"hljs-attribute\">content</span>: {\n            <span class=\"hljs-attribute\">brief</span>: { <span class=\"hljs-attribute\">type</span>: Types.Html, <span class=\"hljs-attribute\">wysiwyg</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">150</span> },\n            <span class=\"hljs-attribute\">extended</span>: { <span class=\"hljs-attribute\">type</span>: Types.Html, <span class=\"hljs-attribute\">wysiwyg</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">400</span> }\n        }\n    });\n\n    Post.defaultColumns = <span class=\"hljs-string\">'title, state|20%, author, publishedAt|15%'</span>;\n    Post.register();\n</code></pre><p></code></pre>  </p>\n<p><div class=\"code-header\"> <h4>Default options </h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">\n    var defaultOptions = {\n        schema: {\n            collection: keystone.prefixModel(key)\n        },\n        noedit: false,\n        nocreate: false,\n        nodelete: false,\n        autocreate: false,\n        sortable: false,\n        hidden: false,\n        track: false,\n        inherits: false,\n        searchFields: &#39;<strong>name</strong>&#39;,\n        defaultSort: &#39;<strong>default</strong>&#39;,\n        defaultColumns: &#39;<strong>name</strong>&#39;\n    };</p>\n<p></code></pre>  </p>\n<p><div class=\"code-header\"> <h4>List properties </h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">\n    this.key = key;\n    this.path = this.get(&#39;path&#39;) || utils.keyToPath(key, true);\n    this.schema = new keystone.mongoose.Schema({}, this.options.schema);\n    this.schemaFields = [];\n    this.uiElements = [];\n    this.underscoreMethods = {};\n    this.fields = {};\n    this.fieldsArray = [];\n    this.fieldTypes = {};\n    this.relationshipFields = [];\n    this.relationships = {};\n    this.mappings = {\n        name: null,\n        createdBy: null,\n        createdOn: null,\n        modifiedBy: null,\n        modifiedOn: null\n    };</p>\n<p></code></pre>  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"lib/list.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n",
      "md": "#### new Keystone.List( key, options )\r\n> *@param* **key** _{String}_  - List name   \r\n> *@param* **options** _{Object}_  - Object of valid options    \r\n> _@return_ **Instance**   \r\n\r\nCreate a new Keystone List.  \r\nEach list is a wrapper around a mongoose collection schema and includes Keystone specific enhancements.  \r\nThe mongoose schema is available via `list.schema`.  \r\n\r\n<div class=\"code-header\"> <h4>Create a new list</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">  \r\n\t\r\n\r\n\t\tvar keystone = require('keystone');\r\n\t\tvar Types = keystone.Field.Types;\r\n\t\t\r\n\t\tvar Post = new keystone.List('Post', {\r\n\t\t\tautokey: { path: 'slug', from: 'title', unique: true },\r\n\t\t\tmap: { name: 'title' },\r\n\t\t\tdefaultSort: '-createdAt'\r\n\t\t});\r\n\r\n\t\tPost.add({\r\n\t\t\ttitle: { type: String, required: true },\r\n\t\t\tstate: { type: Types.Select, options: 'draft, published, archived', default: 'draft' },\r\n\t\t\tauthor: { type: Types.Relationship, ref: 'User' },\r\n\t\t\tcreatedAt: { type: Date, default: Date.now },\r\n\t\t\tpublishedAt: Date,\r\n\t\t\timage: { type: Types.CloudinaryImage },\r\n\t\t\tcontent: {\r\n\t\t\t\tbrief: { type: Types.Html, wysiwyg: true, height: 150 },\r\n\t\t\t\textended: { type: Types.Html, wysiwyg: true, height: 400 }\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tPost.defaultColumns = 'title, state|20%, author, publishedAt|15%';\r\n\t\tPost.register();\r\n\r\n</code></pre>  \r\n\r\n<div class=\"code-header\"> <h4>Default options </h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">\r\n\tvar defaultOptions = {\r\n\t\tschema: {\r\n\t\t\tcollection: keystone.prefixModel(key)\r\n\t\t},\r\n\t\tnoedit: false,\r\n\t\tnocreate: false,\r\n\t\tnodelete: false,\r\n\t\tautocreate: false,\r\n\t\tsortable: false,\r\n\t\thidden: false,\r\n\t\ttrack: false,\r\n\t\tinherits: false,\r\n\t\tsearchFields: '__name__',\r\n\t\tdefaultSort: '__default__',\r\n\t\tdefaultColumns: '__name__'\r\n\t};\r\n\r\n</code></pre>  \r\n\r\n<div class=\"code-header\"> <h4>List properties </h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">\r\n\tthis.key = key;\r\n\tthis.path = this.get('path') || utils.keyToPath(key, true);\r\n\tthis.schema = new keystone.mongoose.Schema({}, this.options.schema);\r\n\tthis.schemaFields = [];\r\n\tthis.uiElements = [];\r\n\tthis.underscoreMethods = {};\r\n\tthis.fields = {};\r\n\tthis.fieldsArray = [];\r\n\tthis.fieldTypes = {};\r\n\tthis.relationshipFields = [];\r\n\tthis.relationships = {};\r\n\tthis.mappings = {\r\n\t\tname: null,\r\n\t\tcreatedBy: null,\r\n\t\tcreatedOn: null,\r\n\t\tmodifiedBy: null,\r\n\t\tmodifiedOn: null\r\n\t};\r\n\r\n</code></pre>  \r\n\r\n\r\n<div class=\"code-header addGitHubLink\" data-file=\"lib/list.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \r\n"
    }
  }
}
