---
permalink: simpledocs-json/page/field-types-Location.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.Location",
  "slug": "field-types-Location",
  "page": {
    "_id": "56d7df5323816ef67d075cc3",
    "title": "Keystone.Field.Types.Location",
    "menuTitle": ".Location",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-Location",
    "publish": "published",
    "sortNumber": "16",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.Location( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._underscoreMethods = ['format', 'googleLookup', 'kmFrom', 'milesFrom'];\nthis._fixedSize = 'full';\n\nthis.enableMapsAPI = (options.geocodeGoogle===true || (options.geocodeGoogle !== false && keystone.get('google server api key'))) ? true : false;\n\nthis._properties = ['enableMapsAPI'];\nthis.requiredPaths = ['street1', 'suburb'];</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n<span class=\"subMethod\"> .Field.Types.Location.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L62-L138\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n\n<span class=\"subMethod\"> .Field.Types.Location.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nFormats a list of the values stored by the field. Only paths that have values will be included.  \nOptionally provide a space-separated list of values to include.  \nDelimiter defaults to `', '`.\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L141-L166\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Location.isModified( item ) </span> \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**    \n\nDetects whether the field has been modified.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L169-L185\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Location.validateInput( data )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@api* **public**   \n  \nValidates that a value for this field has been provided in a data object.  \n`options.required` specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L188-L230\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.Location.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update  \n> *@api* **public**  \n\nUpdates the value for this field in the item from a data object.\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L233-L293\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Location.getRequestHandler( item, req [, paths, callback ] )  </span>\n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - valid file object  \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nReturns a callback that handles a standard form submission for the field.  \nExpected form parts are:  \n`field.paths.improve` in `req.body` - improves data via `.googleLookup()`.  \n`field.paths.overwrite` in `req.body` - in conjunction with `improve`, overwrites existing data.   \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L296-L333\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Location.handleRequest( item, req [, paths, callback ] )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - valid file object  \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nImmediately handles a standard form submission for the field (see `.Field.Types.Location.getRequestHandler()`).  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L336-L344\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre>\n\n---\n<span class=\"subMethod\"> .Field.Types.Location.googleLookup( item, region [, update ], callback )  </span> \n> *@param* **item** {Object}   \n> *@param* **region** {String}  \n> *@param* **update** {Boolean|String} -  (optional)  \n> *@param* **callback** {Function}   \n> *@api* **public**  \n\nAutodetect the full address and lat, lng from the stored value.  \nInternal status codes mimic the Google API status codes.\n<p class=\"caution-note\">Uses Google's Maps API and may only be used in conjunction with a Google map.   \nGeocoding results without displaying them on a map is prohibited.  \nPlease make sure your Keystone app complies with the Google Maps API License. </p>\n  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L336-L344\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre>\n\n---\n<span class=\"subMethod\"> .Field.Types.Location.kmFrom( item, point )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **point** {Number}  \n> *@api* **public**  \n\nReturns the distance from a [lat, lng] point in kilometres.   \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L529-L537\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre>\n\n\n---\n<span class=\"subMethod\"> .Field.Types.Location.milesFrom( item, point )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **point** {Number}  \n> *@api* **public**  \n\nReturns the distance from a [lat, lng] point in miles.   \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L540-L548\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre>\n",
      "html": "<h4 id=\"-field-types-location-list-path-options-\">.Field.Types.Location( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._underscoreMethods = [&#39;format&#39;, &#39;googleLookup&#39;, &#39;kmFrom&#39;, &#39;milesFrom&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>this.enableMapsAPI = (options.geocodeGoogle===true || (options.geocodeGoogle !== false &amp;&amp; keystone.get(&#39;google server api key&#39;))) ? true : false;</p>\n<p>this._properties = [&#39;enableMapsAPI&#39;];\nthis.requiredPaths = [&#39;street1&#39;, &#39;suburb&#39;];</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.Location.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L62-L138\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats a list of the values stored by the field. Only paths that have values will be included.<br>Optionally provide a space-separated list of values to include.<br>Delimiter defaults to <code>&#39;, &#39;</code>.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L141-L166\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L169-L185\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L188-L230\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L233-L293\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.getRequestHandler( item, req [, paths, callback ] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.improve</code> in <code>req.body</code> - improves data via <code>.googleLookup()</code>.<br><code>field.paths.overwrite</code> in <code>req.body</code> - in conjunction with <code>improve</code>, overwrites existing data.   </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L296-L333\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.handleRequest( item, req [, paths, callback ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - valid file object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.Location.getRequestHandler()</code>).  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L336-L344\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre></p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.googleLookup( item, region [, update ], callback )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object}<br><em>@param</em> <strong>region</strong> {String}<br><em>@param</em> <strong>update</strong> {Boolean|String} -  (optional)<br><em>@param</em> <strong>callback</strong> {Function}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Autodetect the full address and lat, lng from the stored value.<br>Internal status codes mimic the Google API status codes.</p>\n<p class=\"caution-note\">Uses Google&#39;s Maps API and may only be used in conjunction with a Google map.<br>Geocoding results without displaying them on a map is prohibited.<br>Please make sure your Keystone app complies with the Google Maps API License. </p>\n\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L336-L344\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre></p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.kmFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in kilometres.   </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L529-L537\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre></p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Location.milesFrom( item, point )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>point</strong> {Number}<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns the distance from a [lat, lng] point in miles.   </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/location/LocationType.js#L540-L548\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre></p>\n"
    },
    "display": 1,
    "currentOrder": 16,
    "order": 16
  }
}
