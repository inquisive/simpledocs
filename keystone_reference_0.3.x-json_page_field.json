---
permalink: keystone/reference/0.3.x-json/page/field.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field Class",
  "slug": "field",
  "page": {
    "_id": "56ce867a2016dcfc71d32102",
    "sortBy": 1,
    "currentOrder": 29,
    "order": 29,
    "slug": "field",
    "updatedBy": "54ce583de345cf3359db79bd",
    "updatedAt": "2016-02-29T02:56:13.409Z",
    "createdBy": "54ce583de345cf3359db79bd",
    "createdAt": "2016-02-25T04:43:38.636Z",
    "key": "keystonefield-class",
    "title": "Keystone.Field Class",
    "parent": {
      "_id": "56ce85b72016dcfc71d320fd",
      "order": 2,
      "slug": "keystone",
      "title": "Keystone",
      "parent": "56d194a6020b01635cade433"
    },
    "publish": "published",
    "sortNumber": "29",
    "links": [],
    "externalLinks": "",
    "html": "",
    "markdown": {
      "html": "<h4 id=\"keystone-field-list-path-options-\">Keystone.Field( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>private</strong>  </p>\n</blockquote>\n<p><p class=\"contextual-note\"> Extended by <code>Field.Types</code> Classes, methods should not be used directly. </p></p>\n<p><div class=\"code-header\" > <h4>Extend</h4>file named customType.js</div><pre class=\" language-javascript \"><code  class=\" language-javascript \">var keystone = require(&#39;keystone&#39;);\nvar util = require(&#39;util&#39;);\n/*<em>\n    Custom FieldType Constructor\n    @extends Field\n    @api public\n</em>*/\nfunction custom(list, path, options) {\n    // add your options to this</p>\n<pre><code>    // call super\\_  \n    custom.super\\_.call(this, list, path, options);  \n</code></pre><p>}\n/*<em> inherit Field </em>*/\nutil.inherits(custom, keystone.Field);    </p>\n<p>/*<em> override or add methods </em>*/\ncustom.prototype.addToSchema = function() {\n    // override schema instructions</p>\n<p>}</p>\n<p>/*<em> Export Field Type </em>*/\nexports = module.exports = custom;\n</code></pre> </p>\n<p><div class=\"code-header\" > <h4>main file</div><pre class=\" language-javascript \"><code  class=\" language-javascript \">var keystone = require(&#39;keystone&#39;);\nObject.defineProperty(keystone.Field.Types, &#39;myField&#39;, { get: function() {\n    return require(./customType.js&#39;);\n} });</p>\n<p></code></pre> </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/Type.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n",
      "md": "#### Keystone.Field( list, path, options )\r\n> *@param* **list** _{Object}_  - valid Keystone list   \r\n> *@param* **path** _{String}_  - path   \r\n> *@param* **options** _{Object}_  - options   \r\n> *@api* **private**  \r\n\r\n<p class=\"contextual-note\"> Extended by `Field.Types` Classes, methods should not be used directly. </p>\r\n<div class=\"code-header\" > <h4>Extend</h4>file named customType.js</div><pre class=\" language-javascript \"><code  class=\" language-javascript \">var keystone = require('keystone');\r\nvar util = require('util');\r\n/\\**\r\n\tCustom FieldType Constructor\r\n\t@extends Field\r\n\t@api public\r\n*\\*/\r\nfunction custom(list, path, options) {\r\n    // add your options to this\r\n\r\n\t\t// call super\\_  \r\n\t\tcustom.super\\_.call(this, list, path, options);  \r\n\t\r\n}\r\n/\\** inherit Field *\\*/\r\nutil.inherits(custom, keystone.Field);    \r\n     \r\n     \r\n/\\** override or add methods *\\*/\r\ncustom.prototype.addToSchema = function() {\r\n\t// override schema instructions\r\n\t\r\n}\r\n\r\n/\\** Export Field Type *\\*/\r\nexports = module.exports = custom;\r\n</code></pre> \r\n<div class=\"code-header\" > <h4>main file</div><pre class=\" language-javascript \"><code  class=\" language-javascript \">var keystone = require('keystone');\r\nObject.defineProperty(keystone.Field.Types, 'myField', { get: function() {\r\n\treturn require(./customType.js');\r\n} });\r\n\r\n\r\n</code></pre> \r\n\r\n\r\n\r\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/Type.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \r\n\r\n"
    },
    "display": 1,
    "type": 1,
    "menuTitle": "Keystone.Field"
  }
}
