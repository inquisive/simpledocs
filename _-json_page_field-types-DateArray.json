---
permalink: /-json/page/field-types-DateArray.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.DateArray",
  "slug": "field-types-DateArray",
  "page": {
    "_id": "56d7df5323816ef67d075cba",
    "title": "Keystone.Field.Types.DateArray",
    "menuTitle": ".DateArray",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-DateArray",
    "publish": "published",
    "sortNumber": "7",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.DateArray( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._nativeType = [Date];\nthis._defaultSize = 'medium';\nthis._underscoreMethods = ['format'];\nthis._properties = ['formatString'];\nthis.parseFormatString = options.parseFormat || 'YYYY-MM-DD';\nthis.formatString = (options.format === false) ? false : (options.format || 'Do MMM YYYY');</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n<span class=\"subMethod\"> .Field.Types.DateArray.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nFormats the field value.\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L38-L50\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.DateArray.validateInput( data [, required, item ] )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@param* **required** {Boolean} - true if this is a required field  \n> *@param* **item** {Object} - valid item object  \n> *@api* **public**   \n \n\nChecks that a valid array of dates has been provided in a data object.  \nAn empty value clears the stored value and is considered valid.\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L52-L101\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.DateArray.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update  \n> *@api* **public**  \n\nUpdates the value for this field in the item from a data object \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L104-L133\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n",
      "html": "<h4 id=\"-field-types-datearray-list-path-options-\">.Field.Types.DateArray( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._nativeType = [Date];\nthis._defaultSize = &#39;medium&#39;;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;formatString&#39;];\nthis.parseFormatString = options.parseFormat || &#39;YYYY-MM-DD&#39;;\nthis.formatString = (options.format === false) ? false : (options.format || &#39;Do MMM YYYY&#39;);</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.DateArray.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L38-L50\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.DateArray.validateInput( data [, required, item ] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@param</em> <strong>required</strong> {Boolean} - true if this is a required field<br><em>@param</em> <strong>item</strong> {Object} - valid item object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Checks that a valid array of dates has been provided in a data object.<br>An empty value clears the stored value and is considered valid.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L52-L101\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.DateArray.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/datearray/DateArrayType.js#L104-L133\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n"
    },
    "display": 1,
    "currentOrder": 7,
    "order": 7
  }
}
