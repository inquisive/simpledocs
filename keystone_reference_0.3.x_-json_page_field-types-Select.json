---
permalink: keystone/reference/0.3.x/-json/page/field-types-Select.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.Select",
  "slug": "field-types-Select",
  "page": {
    "_id": "56d7df5323816ef67d075ccc",
    "title": "Keystone.Field.Types.Select",
    "menuTitle": ".Select",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-Select",
    "publish": "published",
    "sortNumber": "25",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.Select( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n\n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this.ui = options.ui || 'select';\nthis.numeric = options.numeric ? true : false;\nthis._nativeType = (options.numeric) ? Number : String;\nthis._underscoreMethods = ['format'];\nthis._properties = ['ops', 'numeric'];\nif (typeof options.options === 'string') {\n\toptions.options = options.options.split(',');\n}\nif (!Array.isArray(options.options)) {\n\tthrow new Error('Select fields require an options array.');\n}\nthis.ops = options.options.map(function(i) {\n\tvar op = _.isString(i) ? { value: i.trim(), label: utils.keyToLabel(i) } : i;\n\tif (!_.isObject(op)) {\n\t\top = { label: '' + i, value: '' + i };\n\t}\n\tif (options.numeric && !_.isNumber(op.value)) {\n\t\top.value = Number(op.value);\n\t}\n\treturn op;\n});\n// undefined options.emptyOption defaults to true\nif (options.emptyOption === undefined) {\n\toptions.emptyOption = true;\n}\n// ensure this.emptyOption is a boolean\nthis.emptyOption = options.emptyOption ? true : false;\n// cached maps for options, labels and values\nthis.map = utils.optionsMap(this.ops);\nthis.labels = utils.optionsMap(this.ops, 'label');\nthis.values = _.pluck(this.ops, 'value');</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Select.addFilterToQuery( filter, query ) </span>   \n> *@param* **filter** {Object}   \n> *@param* **query** {Object}   \n> *@api* **public**    \n\nAdd filters to a query.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L103-L114\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---  \n<span class=\"subMethod\"> .Field.Types.Select.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n  \nAdds a virtual for accessing the label of the selected value, and statics to the Schema for converting a value to a label, and retrieving all of the defined options.   \n \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L47-L87\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---  \n<span class=\"subMethod\"> .Field.Types.Select.cloneOps(  ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\n\n<div class=\"code-header\"> <h4>Retrieves a shallow clone of the options arrays</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\"> return _.map(this.ops, _.clone); </code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L89-L94\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---  \n<span class=\"subMethod\"> .Field.Types.Select.cloneMap(  ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\n\n<div class=\"code-header\"> <h4>Retrieves a shallow clone of the options map.</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\"> return utils.optionsMap(this.ops, true); </code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L96-L101\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---  \n<span class=\"subMethod\"> .Field.Types.Select.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nFormats the field value.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L127-L132\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---  \n<span class=\"subMethod\"> .Field.Types.Select.validateInput( data [, required, item ] ) </span>  \n> *@param* **data** {Object}    \n> *@param* **required** {Boolean} \n> *@param* **item** {Object}   \n> *@api* **public**     \n\nValidates that a valid option has been provided in a data object.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L116-L125\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n",
      "html": "<h4 id=\"-field-types-select-list-path-options-\">.Field.Types.Select( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this.ui = options.ui || &#39;select&#39;;\nthis.numeric = options.numeric ? true : false;\nthis._nativeType = (options.numeric) ? Number : String;\nthis._underscoreMethods = [&#39;format&#39;];\nthis.<em>properties = [&#39;ops&#39;, &#39;numeric&#39;];\nif (typeof options.options === &#39;string&#39;) {\n    options.options = options.options.split(&#39;,&#39;);\n}\nif (!Array.isArray(options.options)) {\n    throw new Error(&#39;Select fields require an options array.&#39;);\n}\nthis.ops = options.options.map(function(i) {\n    var op = </em>.isString(i) ? { value: i.trim(), label: utils.keyToLabel(i) } : i;\n    if (!<em>.isObject(op)) {\n        op = { label: &#39;&#39; + i, value: &#39;&#39; + i };\n    }\n    if (options.numeric &amp;&amp; !</em>.isNumber(op.value)) {\n        op.value = Number(op.value);\n    }\n    return op;\n});\n// undefined options.emptyOption defaults to true\nif (options.emptyOption === undefined) {\n    options.emptyOption = true;\n}\n// ensure this.emptyOption is a boolean\nthis.emptyOption = options.emptyOption ? true : false;\n// cached maps for options, labels and values\nthis.map = utils.optionsMap(this.ops);\nthis.labels = utils.optionsMap(this.ops, &#39;label&#39;);\nthis.values = _.pluck(this.ops, &#39;value&#39;);</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.addFilterToQuery( filter, query ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object}<br><em>@param</em> <strong>query</strong> {Object}<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L103-L114\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p>Adds a virtual for accessing the label of the selected value, and statics to the Schema for converting a value to a label, and retrieving all of the defined options.   </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L47-L87\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.cloneOps(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>Retrieves a shallow clone of the options arrays</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\"> return <em>.map(this.ops, </em>.clone); </code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L89-L94\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.cloneMap(  ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>Retrieves a shallow clone of the options map.</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\"> return utils.optionsMap(this.ops, true); </code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L96-L101\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L127-L132\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Select.validateInput( data [, required, item ] ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object}<br><em>@param</em> <strong>required</strong> {Boolean} \n<em>@param</em> <strong>item</strong> {Object}<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Validates that a valid option has been provided in a data object.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/select/SelectType.js#L116-L125\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n"
    },
    "display": 1,
    "currentOrder": 25,
    "order": 25
  }
}
