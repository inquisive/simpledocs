---
permalink: /-json/page/field-types-Password.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.Password",
  "slug": "field-types-Password",
  "page": {
    "_id": "56d7df5323816ef67d075cc9",
    "title": "Keystone.Field.Types.Password",
    "menuTitle": ".Password",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-Password",
    "publish": "published",
    "sortNumber": "22",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.Password( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n\n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._nativeType = String;\nthis._underscoreMethods = ['format', 'compare'];\nthis._fixedSize = 'large';\n// You can't sort on password fields\noptions.nosort = true;\noptions.nofilter = true; // TODO: remove this when 0.4 is merged\nthis.workFactor = options.workFactor || 10;</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n<span class=\"subMethod\"> .Field.Types.Password.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L23-L77\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Password.addFilterToQuery( filter, query )  </span> \n> *@param* **filter** {Object} - valid filter object  \n> *@param* **query** {Object} - valid query object   \n> *@api* **public**   \n  \nAdd filters to a query.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L79-L86\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n\n<span class=\"subMethod\"> .Field.Types.Password.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\n<p class=\"note\"> Password fields are always formatted as a random no. of asterisks, because the saved hash should never be displayed nor the length of the actual password hinted at.</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L88-L103\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Password.isModified( item ) </span> \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**    \n\nDetects whether the field has been modified.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L169-L185\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.Password.validateInput( data )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@api* **public**   \n  \nValidates that a value for this field has been provided in a data object.  \n`options.required` specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L188-L230\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.Password.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update  \n> *@api* **public**  \n\nUpdates the value for this field in the item from a data object.\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L233-L293\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n",
      "html": "<h4 id=\"-field-types-password-list-path-options-\">.Field.Types.Password( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._nativeType = String;\nthis._underscoreMethods = [&#39;format&#39;, &#39;compare&#39;];\nthis._fixedSize = &#39;large&#39;;\n// You can&#39;t sort on password fields\noptions.nosort = true;\noptions.nofilter = true; // TODO: remove this when 0.4 is merged\nthis.workFactor = options.workFactor || 10;</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.Password.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L23-L77\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Password.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L79-L86\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Password.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p class=\"note\"> Password fields are always formatted as a random no. of asterisks, because the saved hash should never be displayed nor the length of the actual password hinted at.</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L88-L103\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Password.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L169-L185\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Password.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object.<br><code>options.required</code> specifies an Array or space-delimited list of paths that are required (defaults to street1, suburb).  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L188-L230\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Password.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/password/PasswordType.js#L233-L293\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n"
    },
    "display": 1,
    "currentOrder": 22,
    "order": 22
  }
}
