---
permalink: keystone/reference/0.3.x/-json/page/field-types-S3File.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.S3File",
  "slug": "field-types-S3File",
  "page": {
    "_id": "56d7df5323816ef67d075ccb",
    "title": "Keystone.Field.Types.S3File",
    "menuTitle": ".S3File",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-S3File",
    "publish": "published",
    "sortNumber": "24",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.S3File( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n\n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">grappling.mixin(this)\n\t.allowHooks('pre:upload');\nthis._underscoreMethods = ['format', 'uploadFile'];\nthis._fixedSize = 'full';\n\n// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n<span class=\"subMethod\"> .Field.Types.S3File.s3config   \n> *@api* **public**    \n\nExposes the custom or keystone azure config settings.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L67-L75\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre>  \n\n---\n\n<span class=\"subMethod\"> .Field.Types.S3File.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L78-L173\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nFormats the field value.\n```javascript\nreturn item.get(this.paths.url);\n```\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L176-L184\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.hasFormatter(  ) </span> \n> *@api* **public**    \n\nDetects the field have formatter function.  \n```javascript\nreturn 'function' === typeof this.options.format;\n```\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L178-L186\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.generateHeaders( item, file, callback )  </span>   \n> *@param* **item** {Object} - list item  \n> *@param* **file** {Object} - the uploaded file   \n> *@param* **callback** {Function} - callback   \n> *@api* **public**  \n\nGenerates a headers object for this item to use during upload.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L223-L361\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.isModified( item ) </span> \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**    \n\nDetects whether the field has been modified.  \n```javascript\nreturn item.isModified(this.paths.url);\n```\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L187-L195\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.validateInput( data )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@api* **public**   \n \n\nValidates that a value for this field has been provided in a data object \n<p class=\"warning-note\"> TODO - will only return true</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L198-L207\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update  \n> *@api* **public**  \n  \nUpdates the value for this field in the item from a data object\n<p class=\"warning-note\"> TODO - will not return</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L210-L218\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.uploadFile( item, file, update [, callback] )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **file** {Object} - valid file object  \n> *@param* **update** {Boolean} - update or not  \n> *@param* **callback** {Function} - callback (optional)  \n> *@api* **public**  \n\nUploads the file for this field.\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L221-L277\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.getRequestHandler( item, req [, paths, callback] )  </span>\n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - express req object    \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nReturns a callback that handles a standard form submission for the field.  \nExpected form parts are:  \n`field.paths.action` in `req.body` (`clear` or `delete`)  \n`field.paths.upload` in `req.files` (uploads the file to s3file)  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L280-L320\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.S3File.handleRequest( item, req [, paths, callback] )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - express req object  \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nImmediately handles a standard form submission for the field (see `.Field.Types.S3File.getRequestHandler()`).  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L323-L331\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n",
      "html": "<h4 id=\"-field-types-s3file-list-path-options-\">.Field.Types.S3File( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">grappling.mixin(this)\n    .allowHooks(&#39;pre:upload&#39;);\nthis._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.S3File.s3config   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Exposes the custom or keystone azure config settings.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L67-L75\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre>  </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L78-L173\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.</p>\n<pre><code class=\"language-javascript\">return item.get(this.paths.url);\n</code></pre>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L176-L184\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects the field have formatter function.  </p>\n<pre><code class=\"language-javascript\">return &#39;function&#39; === typeof this.options.format;\n</code></pre>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L178-L186\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.generateHeaders( item, file, callback )  </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@param</em> <strong>file</strong> {Object} - the uploaded file<br><em>@param</em> <strong>callback</strong> {Function} - callback<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Generates a headers object for this item to use during upload.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L223-L361\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class=\"language-javascript\">return item.isModified(this.paths.url);\n</code></pre>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L187-L195\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object </p>\n<p class=\"warning-note\"> TODO - will only return true</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L198-L207\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object</p>\n<p class=\"warning-note\"> TODO - will not return</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L210-L218\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.uploadFile( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the file for this field.</p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L221-L277\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the file to s3file)  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L280-L320\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.S3File.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.S3File.getRequestHandler()</code>).  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/s3file/S3FileType.js#L323-L331\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n"
    },
    "display": 1,
    "currentOrder": 24,
    "order": 24
  }
}
