---
permalink: simpledocs-json/page/field-types-LocalFiles.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.LocalFiles",
  "slug": "field-types-LocalFiles",
  "page": {
    "_id": "56d7df5323816ef67d075cc2",
    "title": "Keystone.Field.Types.LocalFiles",
    "menuTitle": ".LocalFiles",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-LocalFiles",
    "publish": "published",
    "sortNumber": "15",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.LocalFiles( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._underscoreMethods = ['format', 'uploadFile'];\nthis._fixedSize = 'full';\n\n// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n<span class=\"subMethod\"> .Field.Types.LocalFiles.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L67-L193\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n\n<span class=\"subMethod\"> .Field.Types.LocalFiles.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nFormats the field value.\nDelegates to the options.format function if it exists.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L196-L214\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.hasFormatter(  ) </span> \n> *@api* **public**    \n\nDetects whether the field has formatter function in `options.format`\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L217-L225\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.href( item ) </span> \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**    \n\nReturn the public href for a single stored file  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L228-L238\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.isModified( item ) </span> \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**    \n\nDetects whether the field has been modified.  \n```javascript\nreturn item.isModified(this.paths.path);\n```\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L241-L249\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.validateInput( data )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@api* **public**   \n \n<p class=\"warning-note\"> TODO (if needed) - will only return true</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L252-L261\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update  \n> *@api* **public**  \n\n<p class=\"warning-note\"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L264-L272\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.uploadFiles( item, file, update [, callback] )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **file** {Object} - valid file object  \n> *@param* **update** {Boolean} - update or not  \n> *@param* **callback** {Function} - callback (optional)  \n> *@api* **public**  \n\nUploads the files for this field.  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L275-L339\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.getRequestHandler( item, req [, paths, callback] )  </span>\n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - express req object    \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nReturns a callback that handles a standard form submission for the field.  \nExpected form parts are:  \n`field.paths.action` in `req.body` (`clear` or `delete`)  \n`field.paths.upload` in `req.files` (uploads the image to localfiles)  \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L352-L421\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---\n<span class=\"subMethod\"> .Field.Types.LocalFiles.handleRequest( item, req [, paths, callback] )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **req** {Object} - express req object    \n> *@param* **paths** {Object} - valid field paths (optional)  \n> *@param* **callback** {Function} - optional callback (optional)  \n> *@api* **public**  \n\nImmediately handles a standard form submission for the field (see `.Field.Types.LocalFiles.getRequestHandler()`).  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L424-L432\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre>\n\n",
      "html": "<h4 id=\"-field-types-localfiles-list-path-options-\">.Field.Types.LocalFiles( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this._underscoreMethods = [&#39;format&#39;, &#39;uploadFile&#39;];\nthis._fixedSize = &#39;full&#39;;</p>\n<p>// TODO: implement filtering, usage disabled for now\noptions.nofilter = true;\n</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L67-L193\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Formats the field value.\nDelegates to the options.format function if it exists.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L196-L214\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.hasFormatter(  ) </span> </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has formatter function in <code>options.format</code></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L217-L225\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.href( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Return the public href for a single stored file  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L228-L238\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.isModified( item ) </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Detects whether the field has been modified.  </p>\n<pre><code class=\"language-javascript\">return item.isModified(this.paths.path);\n</code></pre>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L241-L249\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p class=\"warning-note\"> TODO (if needed) - will only return true</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L252-L261\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p class=\"warning-note\"> TODO - direct updating of data (not via upload) - will not currently return</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L264-L272\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.uploadFiles( item, file, update [, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>file</strong> {Object} - valid file object<br><em>@param</em> <strong>update</strong> {Boolean} - update or not<br><em>@param</em> <strong>callback</strong> {Function} - callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Uploads the files for this field.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L275-L339\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.getRequestHandler( item, req [, paths, callback] )  </span></p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Returns a callback that handles a standard form submission for the field.<br>Expected form parts are:<br><code>field.paths.action</code> in <code>req.body</code> (<code>clear</code> or <code>delete</code>)<br><code>field.paths.upload</code> in <code>req.files</code> (uploads the image to localfiles)  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L352-L421\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.LocalFiles.handleRequest( item, req [, paths, callback] )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>req</strong> {Object} - express req object<br><em>@param</em> <strong>paths</strong> {Object} - valid field paths (optional)<br><em>@param</em> <strong>callback</strong> {Function} - optional callback (optional)<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Immediately handles a standard form submission for the field (see <code>.Field.Types.LocalFiles.getRequestHandler()</code>).  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/localfiles/LocalFilesType.js#L424-L432\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre></p>\n"
    },
    "display": 1,
    "currentOrder": 15,
    "order": 15
  }
}
