---
permalink: keystone/reference/0.3.x-json/page/field-types-Relationship.json
---
{
  "action": "simple documentation",
  "command": "page",
  "success": true,
  "message": "Have a great day!",
  "code": 200,
  "title": "Keystone.Field.Types.Relationship",
  "slug": "field-types-Relationship",
  "page": {
    "_id": "56d7df5323816ef67d075cca",
    "title": "Keystone.Field.Types.Relationship",
    "menuTitle": ".Relationship",
    "parent": {
      "_id": "56d3b3697262188f4f6ef23b",
      "order": 30,
      "slug": "keystonefieldtypes",
      "title": "Keystone.Field.Types",
      "parent": "56ce85b72016dcfc71d320fd"
    },
    "slug": "field-types-Relationship",
    "publish": "published",
    "sortNumber": "23",
    "type": 1,
    "links": [],
    "markdown": {
      "md": "#### .Field.Types.Relationship( list, path, options )  \n> *@param* **list** _{Object}_  - valid Keystone list   \n> *@param* **path** _{String}_  - path   \n> *@param* **options** _{Object}_  - options   \n> *@api* **public**  \n\n\n\n<div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this.many = (options.many) ? true : false;\nthis.filters = options.filters;\nthis._defaultSize = 'full';\nthis._nativeType = keystone.mongoose.Schema.Types.ObjectId;\nthis._underscoreMethods = ['format'];\nthis._properties = ['isValid', 'many', 'filters'];</code></pre>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n\n<span class=\"subMethod\"> .Field.Types.Relationship.addFilterToQuery( filter, query )  </span> \n> *@param* **filter** {Object} - valid filter object  \n> *@param* **query** {Object} - valid query object   \n> *@api* **public**   \n  \nAdd filters to a query.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L98-L117\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.addFilters( query, item ) </span>   \n> *@param* **query** {Object} - valid query object  \n> *@param* **item** {Object} - list item  \n> *@api* **public**    \n\nAdds relationship filters to a query \n\n<p class=\"caution-note\">TODO: Deprecate this? Not sure it's used anywhere </p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L203-L223\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n---  \n<span class=\"subMethod\"> .Field.Types.Relationship.addToSchema(  ) </span>  \n> *@api* **public**     \n\nRegisters the field on the List's Mongoose Schema.  \n \n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L63-L96\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---  \n<span class=\"subMethod\"> .Field.Types.Relationship.format( item ) </span>  \n> *@param* **item** {Object} - valid field object   \n> *@api* **public**     \n\nforce the formatted value to be a string\n<p class=\"caution-note\">unexpected things happen with ObjectIds.</p>\n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L119-L126\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.hasFilters </span>   \n> *@api* **public**    \n\nWhether the field has any filters defined \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L194-L201\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.isValid </span>   \n> *@api* **public**    \n\nReturns true if the relationship configuration is valid  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L176-L183\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.refList </span>   \n> *@api* **public**    \n\nReturns the Related List \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L185-L192\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.updateItem( item, data )  </span> \n> *@param* **item** {Object} - valid field object  \n> *@param* **data** {Object} - data to update   \n> *@api* **public**  \n\nUpdates the value for this field in the item from a data object.  \nOnly updates the value if it has changed.  \nTreats an empty string as a null value.  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L141-L174\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n---\n<span class=\"subMethod\"> .Field.Types.Relationship.validateInput( data )  </span> \n> *@param* **data** {Object} - valid data object  \n> *@api* **public**   \n  \nValidates that a value for this field has been provided in a data object  \n\n<div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L128-L139\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> \n\n\n\n\n\n",
      "html": "<h4 id=\"-field-types-relationship-list-path-options-\">.Field.Types.Relationship( list, path, options )</h4>\n<blockquote>\n<p><em>@param</em> <strong>list</strong> <em>{Object}</em>  - valid Keystone list<br><em>@param</em> <strong>path</strong> <em>{String}</em>  - path<br><em>@param</em> <strong>options</strong> <em>{Object}</em>  - options<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p><div class=\"code-header\"> <h4>defaults</h4></div><pre class=\" language-javascript\"><code class=\"language-javascript\">this.many = (options.many) ? true : false;\nthis.filters = options.filters;\nthis._defaultSize = &#39;full&#39;;\nthis._nativeType = keystone.mongoose.Schema.Types.ObjectId;\nthis._underscoreMethods = [&#39;format&#39;];\nthis._properties = [&#39;isValid&#39;, &#39;many&#39;, &#39;filters&#39;];</code></pre></p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js\"> <a href=\"#\" class=\"loadCode\"> code</a></div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.addFilterToQuery( filter, query )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>filter</strong> {Object} - valid filter object<br><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Add filters to a query.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L98-L117\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.addFilters( query, item ) </span>   </p>\n<blockquote>\n<p><em>@param</em> <strong>query</strong> {Object} - valid query object<br><em>@param</em> <strong>item</strong> {Object} - list item<br><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Adds relationship filters to a query </p>\n<p class=\"caution-note\">TODO: Deprecate this? Not sure it&#39;s used anywhere </p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L203-L223\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.addToSchema(  ) </span>  </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>Registers the field on the List&#39;s Mongoose Schema.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L63-L96\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.format( item ) </span>  </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@api</em> <strong>public</strong>     </p>\n</blockquote>\n<p>force the formatted value to be a string</p>\n<p class=\"caution-note\">unexpected things happen with ObjectIds.</p>\n\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L119-L126\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.hasFilters </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Whether the field has any filters defined </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L194-L201\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.isValid </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns true if the relationship configuration is valid  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L176-L183\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.refList </span>   </p>\n<blockquote>\n<p><em>@api</em> <strong>public</strong>    </p>\n</blockquote>\n<p>Returns the Related List </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L185-L192\">&nbsp; </div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.updateItem( item, data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>item</strong> {Object} - valid field object<br><em>@param</em> <strong>data</strong> {Object} - data to update<br><em>@api</em> <strong>public</strong>  </p>\n</blockquote>\n<p>Updates the value for this field in the item from a data object.<br>Only updates the value if it has changed.<br>Treats an empty string as a null value.  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L141-L174\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n<hr>\n<p><span class=\"subMethod\"> .Field.Types.Relationship.validateInput( data )  </span> </p>\n<blockquote>\n<p><em>@param</em> <strong>data</strong> {Object} - valid data object<br><em>@api</em> <strong>public</strong>   </p>\n</blockquote>\n<p>Validates that a value for this field has been provided in a data object  </p>\n<p><div class=\"code-header addGitHubLink\" data-file=\"fields/types/relationship/RelationshipType.js#L128-L139\"> &nbsp;</div><pre class=\" language-javascript hideCode api\"></pre> </p>\n"
    },
    "display": 1,
    "currentOrder": 23,
    "order": 23
  }
}
